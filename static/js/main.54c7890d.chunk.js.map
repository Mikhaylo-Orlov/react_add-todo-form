{"version":3,"sources":["api/users.ts","services/user.ts","components/addNewTodo/addNewTodo.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","AddNewTodo","onSubmit","useState","title","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","completed","className","htmlFor","type","placeholder","value","onChange","filteredTitleValue","target","replace","disabled","map","UserInfo","href","TodoInfo","todo","classNames","TodoList","todos","initialTodos","getNewTodoId","Math","max","App","setTodos","newToDo","currentToDos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54c7890d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  const findUser = usersFromServer.find(user => user.id === userId);\n\n  return findUser || null;\n}\n","import React, { useState } from 'react';\n\nimport { ToDo } from '../../types/ToDo';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onSubmit: (todo: ToDo) => void,\n};\n\nexport const AddNewTodo: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const titleValue = event.target.value;\n    const filteredTitleValue = titleValue.replace(/[^a-zA-Zа-яА-Я\\d\\s]/g, '');\n\n    setTitle(filteredTitleValue);\n\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    });\n\n    resetForm();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"todo-title\" className=\"label\">\n          Title\n        </label>\n\n        <input\n          id=\"todo-title\"\n          type=\"text\"\n          name=\"Title\"\n          placeholder=\"Enter title\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {hasTitleError && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"todo-user\" className=\"label\">\n          User\n        </label>\n\n        <select\n          id=\"todo-user\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {usersFromServer.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n        className=\"button\"\n      >\n        Add\n      </button>\n\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { ToDo } from '../../types/ToDo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: ToDo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { ToDo } from '../../types/ToDo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: ToDo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport { AddNewTodo } from './components/addNewTodo/addNewTodo';\nimport { TodoList } from './components/TodoList';\nimport { ToDo } from './types/ToDo';\nimport { getUserById } from './services/user';\n\nconst initialTodos: ToDo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: ToDo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<ToDo[]>(initialTodos);\n\n  const onAddNewToDo = (todo: ToDo) => {\n    const newToDo = {\n      ...todo,\n      completed: true,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos((currentToDos) => ([\n      ...currentToDos,\n      newToDo,\n    ]));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <AddNewTodo onSubmit={onAddNewToDo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}